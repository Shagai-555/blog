{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Layout from \"components/layout\";\nimport { getPostBySlug, getAllPosts } from \"lib/api\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport HiglightCode from \"components/higlight-code\";\nimport { urlFor } from \"lib/api\";\nimport PostHeader from \"components/post-header\";\nconst serializers = {\n  types: {\n    code: props => /*#__PURE__*/_jsxs(HiglightCode, {\n      language: props.node.language,\n      children: [props.node.code, /*#__PURE__*/_jsx(\"div\", {\n        className: \"code-filename\",\n        children: props.node.filename\n      })]\n    }),\n    image: props => /*#__PURE__*/_jsxs(\"div\", {\n      className: `blog-image blog-image-${props.node.position}`,\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        src: urlFor(props.node).height(400).url()\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"code-filename\",\n        style: {\n          textAlign: \"center\"\n        },\n        children: props.node.alt\n      })]\n    })\n  }\n};\nexport default (({\n  post\n}) => {\n  return /*#__PURE__*/_jsx(Layout, {\n    children: /*#__PURE__*/_jsx(Row, {\n      children: /*#__PURE__*/_jsxs(Col, {\n        md: \"12\",\n        children: [/*#__PURE__*/_jsx(\"pre\", {}), /*#__PURE__*/_jsx(PostHeader, {\n          post: post\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(BlockContent, {\n          blocks: post.content,\n          serializers: serializers,\n          imageOptions: {\n            w: 320,\n            h: 240,\n            fit: \"max\"\n          }\n        })]\n      })\n    })\n  });\n});\nexport const getStaticProps = async ({\n  params\n}) => {\n  const post = await getPostBySlug(params.slug);\n  return {\n    props: {\n      post: post[0]\n    }\n  };\n};\nexport const getStaticPaths = async () => {\n  const posts = await getAllPosts();\n  return {\n    paths: posts.map(post => ({\n      params: {\n        slug: post.slug\n      }\n    })),\n    fallback: false\n  };\n};","map":null,"metadata":{},"sourceType":"module"}